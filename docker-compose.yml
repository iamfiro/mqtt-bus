services:
  # Redis 서비스
  redis:
    image: redis:7-alpine
    container_name: smart-bus-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - smart-bus-network

  # MQTT 브로커 (Mosquitto)
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: smart-bus-mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    healthcheck:
      test: ["CMD", "mosquitto_pub", "-h", "localhost", "-t", "test", "-m", "test"]
      interval: 15s
      timeout: 5s
      retries: 3
    networks:
      - smart-bus-network

  # 메인 애플리케이션
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: smart-bus-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MQTT_BROKER_URL=mqtt://mosquitto:1883
      - LOG_LEVEL=info
      - DISTANCE_THRESHOLD_METERS=500
      - ETA_UPDATE_INTERVAL_MS=2000
    volumes:
      - app_logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      mosquitto:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - smart-bus-network

  # 개발용 MQTT 클라이언트 (선택적)
  mqtt-client:
    image: eclipse-mosquitto:2
    container_name: smart-bus-mqtt-client
    depends_on:
      mosquitto:
        condition: service_healthy
    command: >
      sh -c "sleep 10 && 
             echo 'MQTT 브로커 연결 테스트 중...' &&
             mosquitto_pub -h mosquitto -t 'system/status' -m '{\"status\":\"online\",\"timestamp\":\"$(date -Iseconds)\"}' &&
             echo 'MQTT 테스트 메시지 전송 완료'"
    networks:
      - smart-bus-network
    profiles:
      - testing

volumes:
  redis_data:
    driver: local
  mosquitto_data:
    driver: local
  mosquitto_logs:
    driver: local
  app_logs:
    driver: local

networks:
  smart-bus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 